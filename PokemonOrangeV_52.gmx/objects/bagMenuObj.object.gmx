<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -200
self.selector = 0
self.holdingPotion = false
self.holdingPokeball = false
self.holdingRareCandy = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(igMenuObj.controlEnabler) {
    //exit
    if (keyboard_check_released(vk_escape) and (instance_exists(bagMenuObj))) {
        igMenuObj.controlEnabler = true
        instance_destroy()
    }
    //selector control
    if (keyboard_check_released(vk_down)) {
        if !(self.selector == 2) {
            self.selector += 1
        }
    }
    if (keyboard_check_released(vk_up)) {
        if !(self.selector == 0) {
            self.selector -= 1
        }
    }
    
    switch self.selector {
        case 0:
            //Potion Item
            self.holdingPokeball = false
            self.holdingRareCandy = false
            self.holdingPotion = true
            break
        case 1:
            //Pokeball Item
            self.holdingRareCandy = false
            self.holdingPotion = false
            self.holdingPokeball = true
            break
        case 2:
            //Rare Candy Item
            self.holdingPotion = false
            self.holdingPokeball = false
            self.holdingRareCandy = true
            break
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var height = -180
var width = 50
var lastCreated
var pokeID = ""
for (var i = 0; i &lt;= array_height_2d(playerObj.pokemonArray) - 1; i++) {
    pokeID = playerObj.pokemonArray[@ i, 0]
    lastCreated = instance_create(self.x + width, self.y + height, bagPokemonObj)
    with (lastCreated) {
        pokemonID = pokeID
        depth = -400
    }
    height = height + 75
    if (i = 5) {
        break
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(steelfish)
draw_set_halign(fa_center)
var buttonWidth = 100
var buttonHeight = 30
draw_rectangle(self.x - 256, self.y - 240, self.x + 256, self.y + 240, false)

if (self.selector == 0) {
    draw_sprite_stretched(menuButtonSelected, 0, self.x - 246, self.y - 230, buttonWidth, buttonHeight)
    draw_sprite_stretched(menuButtonSprite, 0, self.x - 246, self.y - 190, buttonWidth, buttonHeight)
    draw_sprite_stretched(menuButtonSprite, 0, self.x - 246, self.y - 150, buttonWidth, buttonHeight)
}
else if (self.selector == 1) {
    draw_sprite_stretched(menuButtonSprite, 0, self.x - 246, self.y - 230, buttonWidth, buttonHeight)
    draw_sprite_stretched(menuButtonSelected, 0, self.x - 246, self.y - 190, buttonWidth, buttonHeight)
    draw_sprite_stretched(menuButtonSprite, 0, self.x - 246, self.y - 150, buttonWidth, buttonHeight)
}
else if (self.selector == 2) {
    draw_sprite_stretched(menuButtonSprite, 0, self.x - 246, self.y - 230, buttonWidth, buttonHeight)
    draw_sprite_stretched(menuButtonSprite, 0, self.x - 246, self.y - 190, buttonWidth, buttonHeight)
    draw_sprite_stretched(menuButtonSelected, 0, self.x - 246, self.y - 150, buttonWidth, buttonHeight)
}
draw_set_font(steelfish20)
draw_text(self.x - 246 + buttonWidth/2, self.y - 234, "Potion")
draw_text(self.x - 246 + buttonWidth/2, self.y - 194, "Pokeball")
draw_text(self.x - 246 + buttonWidth/2, self.y - 154, "Rare Candy")

//draw descriptions of items
draw_set_halign(fa_left)
if (self.holdingPotion) {
    draw_text_colour(self.x - 246 + buttonWidth + 10, self.y - 234, "x " + string(ds_map_find_value(playerObj.inventoryMap, self.selector)), c_white, c_white, c_white, c_white, 1)
}
else if (self.holdingPokeball) {
    draw_text_colour(self.x - 246 + buttonWidth + 10, self.y - 194, "x " + string(ds_map_find_value(playerObj.inventoryMap, self.selector)), c_white, c_white, c_white, c_white, 1)
}
else if (self.holdingRareCandy) {
    draw_text_colour(self.x - 246 + buttonWidth + 10, self.y - 154, "x " + string(ds_map_find_value(playerObj.inventoryMap, self.selector)), c_white, c_white, c_white, c_white, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
